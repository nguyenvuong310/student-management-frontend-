pipeline {
  agent any

  environment {
    DOCKER_IMAGE = "vuong676/listvdt-frontend-web"
    CONFIG_REPO = "https://github.com/nguyenvuong310/config-web.git"
    GIT_USER = "nguyenvuong310"
    GIT_EMAIL = "trungvuong2169@gmail.com"
    G_TOKEN = credentials('G_TOKEN') // Define this in Jenkins credentials
    DOCKER_USERNAME = "vuong676"
    DOCKER_PASSWORD = credentials('DOCKERHUB_ACCESS_TOKEN') // Define as secret text
  }

  options {
    skipDefaultCheckout(true)
  }

  parameters {
    string(name: 'TAG_NAME', defaultValue: '', description: 'Tag name (e.g. v1.0.0)')
  }

  stages {
    stage('Checkout Source') {
      steps {
        checkout scm
      }
    }

    stage('Login to Docker Hub') {
      steps {
        script {
          sh """
            echo "${DOCKER_PASSWORD}" | docker login -u "${DOCKER_USERNAME}" --password-stdin
          """
        }
      }
    }

    stage('Build and Push Docker Image') {
      when {
        expression { return params.TAG_NAME != '' }
      }
      steps {
        sh """
          docker build -t ${DOCKER_IMAGE}:${TAG_NAME} .
          docker push ${DOCKER_IMAGE}:${TAG_NAME}
        """
      }
    }

    stage('Update Config Repo') {
      when {
        expression { return params.TAG_NAME != '' }
      }
      steps {
        dir('config-repo') {
          git url: CONFIG_REPO, branch: 'main', credentialsId: 'G_TOKEN'

          script {
            sh """
              sed -i 's/^ *tag:.*/  tag: ${TAG_NAME}/' values.yaml
              git config --global user.name "${GIT_USER}"
              git config --global user.email "${GIT_EMAIL}"
              git add values.yaml
              git commit -m "Update image tag to ${TAG_NAME}" || echo "No changes to commit"
              git push https://${G_TOKEN}@github.com/nguyenvuong310/config-web.git HEAD:main
            """
          }
        }
      }
    }
  }
}