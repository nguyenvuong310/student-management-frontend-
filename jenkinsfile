pipeline {
  agent {
    kubernetes {
      cloud 'test-k8s-cloud'
      defaultContainer 'kaniko'
      yaml """
apiVersion: v1
kind: Pod
spec:
  containers:
    - name: shell
      image: alpine/git
      command: [sleep]
      args: ["999999"]
      volumeMounts:
        - name: workspace-volume
          mountPath: /home/jenkins/agent
    
    - name: jnlp
    image: jenkins/inbound-agent:alpine-jdk11
    args: ['\$(JENKINS_SECRET)', '\$(JENKINS_NAME)']
    workingDir: /home/jenkins/agent
    volumeMounts:
    - name: workspace-volume
      mountPath: /home/jenkins/agent

    - name: kaniko
      image: gcr.io/kaniko-project/executor:debug
      imagePullPolicy: Always
      command: [sleep]
      args: ["999999"]
      volumeMounts:
        - name: workspace-volume
          mountPath: /home/jenkins/agent
        - name: docker-config
          mountPath: /kaniko/.docker/

  volumes:
    - name: workspace-volume
      emptyDir: {}
    - name: docker-config
      secret:
        secretName: dockerhub-credentials
        items:
          - key: .dockerconfigjson
            path: config.json
"""
    }
  }

  environment {
    DOCKER_IMAGE_NAME = 'vuong676/listvdt-frontend-web'
    G_TOKEN = credentials('github-token-write')
  }

  parameters {
    string(name: 'TAG_NAME', defaultValue: '', description: 'Tag name (e.g. 1.0)')
  }

  stages {
    // stage('1. Checkout Source Code') {
    //   steps {
    //     container('kaniko') {
    //       git(
    //         url: 'https://github.com/nguyenvuong310/student-management-frontend-.git',
    //         branch: 'main',
    //         credentialsId: 'github-cred'
    //       )
    //       echo "âœ… Checkout thÃ nh cÃ´ng."
    //       sh "ls -la"
    //     }
    //   }
    // }

    // stage('2. Build & Push with Kaniko') {
    //   when {
    //     expression { return params.TAG_NAME?.trim() }
    //   }
    //   steps {
    //     container('kaniko') {
    //       script {
    //         def fullTag = "${DOCKER_IMAGE_NAME}:${TAG_NAME}"
    //         echo "ðŸš€ Building and pushing image: ${fullTag}"
    //         sh """
    //           /kaniko/executor \
    //             --context `pwd` \
    //             --dockerfile `pwd`/dockerfile \
    //             --destination=${fullTag}
    //         """
    //       }
    //     }
    //   }
    // }

    stage('3. Checkout Config Repo') {
      steps {
        container('shell') {
          dir('config-repo') {
            git url: "https://github.com/nguyenvuong310/config-web.git",
                branch: "main",
                credentialsId: 'github-token-write'
          }
        }
      }
    }

    stage('4. Update Image Tag in values.yaml') {
      steps {
        container('shell') {
          dir('config-repo') {
            sh """
              ls -la
              sed -i 's/^ *tag:.*/  tag: ${TAG_NAME}/g' values.yaml
            """
          }
        }
      }
    }

    stage('5. Commit and Push Changes') {
      steps {
        container('jnlp') {
          dir('config-repo') {
            sh """
              git add values.yaml
              git commit -m "Update image tag to ${TAG_NAME}" || echo "Nothing to commit"
              git push https://${G_TOKEN}@github.com/nguyenvuong310/config-web.git HEAD:main
            """
          }
        }
      }
    }
  }

  post {
    always {
      echo 'ðŸ§¹ Pipeline Ä‘Ã£ káº¿t thÃºc.'
      cleanWs()
    }
  }
}